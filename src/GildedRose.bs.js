// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


function upTo50(__x) {
  return Math.min(50, __x);
}

function min0(__x) {
  return Math.max(0, __x);
}

function updateQuality(item) {
  switch (item.TAG | 0) {
    case /* AgedBrie */0 :
        return {
                TAG: /* AgedBrie */0,
                name: item.name,
                sellIn: item.sellIn - 1 | 0,
                quality: Math.min(50, item.quality + 1 | 0)
              };
    case /* Sulfuras */1 :
        return item;
    case /* BackstagePasses */2 :
        var quality = item.quality;
        var sellIn = item.sellIn;
        return {
                TAG: /* BackstagePasses */2,
                name: item.name,
                sellIn: sellIn - 1 | 0,
                quality: quality !== 50 ? (
                    sellIn !== 0 ? (
                        sellIn <= 5 ? Math.min(50, quality + 3 | 0) : (
                            sellIn <= 10 ? Math.min(50, quality + 2 | 0) : Math.min(50, quality + 1 | 0)
                          )
                      ) : 0
                  ) : 50
              };
    case /* Conjured */3 :
        var quality$1 = item.quality;
        var sellIn$1 = item.sellIn;
        return {
                TAG: /* Conjured */3,
                name: item.name,
                sellIn: sellIn$1 - 1 | 0,
                quality: sellIn$1 !== 0 ? Math.max(0, quality$1 - 2 | 0) : quality$1 - 4 | 0
              };
    case /* Other */4 :
        var quality$2 = item.quality;
        var sellIn$2 = item.sellIn;
        return {
                TAG: /* Other */4,
                name: item.name,
                sellIn: sellIn$2 - 1 | 0,
                quality: sellIn$2 !== 0 ? Math.max(0, quality$2 - 1 | 0) : quality$2 - 2 | 0
              };
    
  }
}

var Domain = {
  updateQuality: updateQuality
};

function make(name, sellIn, quality) {
  return {
          name: name,
          sellIn: sellIn,
          quality: quality
        };
}

function toDomain(item) {
  var name = item.name;
  switch (name) {
    case "Aged Brie" :
        return {
                TAG: /* AgedBrie */0,
                name: item.name,
                sellIn: item.sellIn,
                quality: item.quality
              };
    case "Backstage passes to a TAFKAL80ETC concert" :
        return {
                TAG: /* BackstagePasses */2,
                name: item.name,
                sellIn: item.sellIn,
                quality: item.quality
              };
    case "Sulfuras, Hand of Ragnaros" :
        return {
                TAG: /* Sulfuras */1,
                name: item.name
              };
    default:
      if (name.startsWith("Conjured")) {
        return {
                TAG: /* Conjured */3,
                name: item.name,
                sellIn: item.sellIn,
                quality: item.quality
              };
      } else {
        return {
                TAG: /* Other */4,
                name: item.name,
                sellIn: item.sellIn,
                quality: item.quality
              };
      }
  }
}

var Item = {
  make: make,
  toDomain: toDomain
};

function updateQuality$1(items) {
  return items.map(function (item) {
              var match = item.name;
              switch (match) {
                case "Aged Brie" :
                    return {
                            name: item.name,
                            sellIn: item.sellIn - 1 | 0,
                            quality: Math.min(50, item.quality + 1 | 0)
                          };
                case "Backstage passes to a TAFKAL80ETC concert" :
                    var match$1 = item.sellIn;
                    var match$2 = item.quality;
                    return {
                            name: item.name,
                            sellIn: item.sellIn - 1 | 0,
                            quality: match$2 !== 50 ? (
                                match$1 !== 0 ? (
                                    match$1 <= 5 ? Math.min(50, match$2 + 3 | 0) : (
                                        match$1 <= 10 ? Math.min(50, match$2 + 2 | 0) : Math.min(50, match$2 + 1 | 0)
                                      )
                                  ) : 0
                              ) : 50
                          };
                case "Sulfuras, Hand of Ragnaros" :
                    return item;
                default:
                  var degradationRate = item.name.startsWith("Conjured") ? 2 : 1;
                  var match$3 = item.sellIn;
                  var match$4 = item.quality;
                  return {
                          name: item.name,
                          sellIn: item.sellIn - 1 | 0,
                          quality: match$3 !== 0 ? Math.max(0, match$4 - (degradationRate << 0) | 0) : item.quality - (degradationRate << 1) | 0
                        };
              }
            });
}

exports.upTo50 = upTo50;
exports.min0 = min0;
exports.Domain = Domain;
exports.Item = Item;
exports.updateQuality = updateQuality$1;
/* No side effect */
